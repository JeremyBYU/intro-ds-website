---
title: "CISC482 - Lecture03"
subtitle: "Data Wrangling"
author: "Dr. Jeremy Castagno"
footer:  "[https://jeremybyu.github.io/intro-ds-website](https://jeremybyu.github.io/intro-ds-website/)"
logo: "../images/logo.png"
format: 
  revealjs: 
    theme: slides.scss
    transition: fade
    slide-number: true
    show-slide-number: all 
    chalkboard: true
    code-copy: false
editor: visual
execute:
  freeze: auto

---


```{python}
#| context: setup
#| include: false
import pandas as pd
import seaborn as sns 
import numpy as np
from palmerpenguins import load_penguins, load_penguins_raw
sns.set_style('whitegrid')
sns.set_context("poster", font_scale=1.25)
np.set_printoptions(precision=3, suppress=True, formatter={'float_kind': "{:.3f}".format})
np.random.seed(1)

```

# Class Business


## Schedule

- Reading 3-1: Feb 3 @ 12PM, Friday
- Reading 3-2: Feb 8 @ 12PM, Wednesday
- Reading 4-1: Feb 10 @ 12PM, Friday
- HW3: Feb 15 @ Midnight, Wednesday


# Data Wrangling

## Steps

1. **Discovery** - Familiarize  with source data
2. **Structuring** - Transforms features to uniform formats, units, and scales. 
3. **Cleaning** - Removes or replaces missing and outlier data. 
4. **Enriching** - Derives new features from existing features and appends new data from external sources.
5. **Validating** - Verifies that the dataset is internally consistent and accurate
6. **Publishing** - Makes the dataset available to others 


## Example

![](./lec06_images/exmaple_wrangle.png)


## Extract, Transform, Load

- **Extract, Transform, Load (ETL)** is a process that extracts data from *databases*, transforms the data, and loads the data into an **analytic** database.
- Similar to data wrangling: process data, clean, enrich, etc.
- Difference is that data wrangling is more informal, where ETL is a usually a business process or service.

## Pandas

::: columns

:::: {.column width="70%"}
- Pandas is an open source Python package
- Widely used for data science/data analysis
- Key idea is organizing data into a **dataframe**
- Tabular data, effecient queries, uses numpy if possible
::::

:::: {.column width="30%"}

![](./lec06_images/pandas_icon.png){.absolute top=150 right=50 width="300px"}
::::

:::

## 



# Class Activity

## Practice Pandas

[Cleaning Data and Graphing](https://colab.research.google.com/drive/1JfP7piEf21u3U-y57Tr_JYk0wMT_0XwS?usp=sharing)